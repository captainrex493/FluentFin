// <auto-generated/>
#pragma warning disable CS0618


using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class LibraryOptions 
    #pragma warning restore CS1591
    {
        /// <summary>An enum representing the options to disable embedded subs.</summary>
        public global::Jellyfin.Client.Models.LibraryOptions_AllowEmbeddedSubtitles? AllowEmbeddedSubtitles { get; set; }
        /// <summary>The AutomaticallyAddToCollection property</summary>
        public bool? AutomaticallyAddToCollection { get; set; }
        /// <summary>The AutomaticRefreshIntervalDays property</summary>
        public int? AutomaticRefreshIntervalDays { get; set; }
        /// <summary>The CustomTagDelimiters property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? CustomTagDelimiters { get; set; }
#nullable restore
#else
        public List<string> CustomTagDelimiters { get; set; }
#endif
        /// <summary>The DelimiterWhitelist property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DelimiterWhitelist { get; set; }
#nullable restore
#else
        public List<string> DelimiterWhitelist { get; set; }
#endif
        /// <summary>The DisabledLocalMetadataReaders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DisabledLocalMetadataReaders { get; set; }
#nullable restore
#else
        public List<string> DisabledLocalMetadataReaders { get; set; }
#endif
        /// <summary>The DisabledLyricFetchers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DisabledLyricFetchers { get; set; }
#nullable restore
#else
        public List<string> DisabledLyricFetchers { get; set; }
#endif
        /// <summary>The DisabledMediaSegmentProviders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DisabledMediaSegmentProviders { get; set; }
#nullable restore
#else
        public List<string> DisabledMediaSegmentProviders { get; set; }
#endif
        /// <summary>The DisabledSubtitleFetchers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DisabledSubtitleFetchers { get; set; }
#nullable restore
#else
        public List<string> DisabledSubtitleFetchers { get; set; }
#endif
        /// <summary>The EnableAutomaticSeriesGrouping property</summary>
        public bool? EnableAutomaticSeriesGrouping { get; set; }
        /// <summary>The EnableChapterImageExtraction property</summary>
        public bool? EnableChapterImageExtraction { get; set; }
        /// <summary>The Enabled property</summary>
        public bool? Enabled { get; set; }
        /// <summary>The EnableEmbeddedEpisodeInfos property</summary>
        public bool? EnableEmbeddedEpisodeInfos { get; set; }
        /// <summary>The EnableEmbeddedExtrasTitles property</summary>
        public bool? EnableEmbeddedExtrasTitles { get; set; }
        /// <summary>The EnableEmbeddedTitles property</summary>
        public bool? EnableEmbeddedTitles { get; set; }
        /// <summary>The EnableInternetProviders property</summary>
        [Obsolete("")]
        public bool? EnableInternetProviders { get; set; }
        /// <summary>The EnableLUFSScan property</summary>
        public bool? EnableLUFSScan { get; set; }
        /// <summary>The EnablePhotos property</summary>
        public bool? EnablePhotos { get; set; }
        /// <summary>The EnableRealtimeMonitor property</summary>
        public bool? EnableRealtimeMonitor { get; set; }
        /// <summary>The EnableTrickplayImageExtraction property</summary>
        public bool? EnableTrickplayImageExtraction { get; set; }
        /// <summary>The ExtractChapterImagesDuringLibraryScan property</summary>
        public bool? ExtractChapterImagesDuringLibraryScan { get; set; }
        /// <summary>The ExtractTrickplayImagesDuringLibraryScan property</summary>
        public bool? ExtractTrickplayImagesDuringLibraryScan { get; set; }
        /// <summary>The LocalMetadataReaderOrder property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? LocalMetadataReaderOrder { get; set; }
#nullable restore
#else
        public List<string> LocalMetadataReaderOrder { get; set; }
#endif
        /// <summary>The LyricFetcherOrder property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? LyricFetcherOrder { get; set; }
#nullable restore
#else
        public List<string> LyricFetcherOrder { get; set; }
#endif
        /// <summary>The MediaSegmentProvideOrder property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? MediaSegmentProvideOrder { get; set; }
#nullable restore
#else
        public List<string> MediaSegmentProvideOrder { get; set; }
#endif
        /// <summary>Gets or sets the metadata country code.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MetadataCountryCode { get; set; }
#nullable restore
#else
        public string MetadataCountryCode { get; set; }
#endif
        /// <summary>The MetadataSavers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? MetadataSavers { get; set; }
#nullable restore
#else
        public List<string> MetadataSavers { get; set; }
#endif
        /// <summary>The PathInfos property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Client.Models.MediaPathInfo>? PathInfos { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Client.Models.MediaPathInfo> PathInfos { get; set; }
#endif
        /// <summary>The PreferNonstandardArtistsTag property</summary>
        public bool? PreferNonstandardArtistsTag { get; set; }
        /// <summary>Gets or sets the preferred metadata language.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PreferredMetadataLanguage { get; set; }
#nullable restore
#else
        public string PreferredMetadataLanguage { get; set; }
#endif
        /// <summary>The RequirePerfectSubtitleMatch property</summary>
        public bool? RequirePerfectSubtitleMatch { get; set; }
        /// <summary>The SaveLocalMetadata property</summary>
        public bool? SaveLocalMetadata { get; set; }
        /// <summary>The SaveLyricsWithMedia property</summary>
        public bool? SaveLyricsWithMedia { get; set; }
        /// <summary>The SaveSubtitlesWithMedia property</summary>
        public bool? SaveSubtitlesWithMedia { get; set; }
        /// <summary>The SaveTrickplayWithMedia property</summary>
        public bool? SaveTrickplayWithMedia { get; set; }
        /// <summary>The SeasonZeroDisplayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SeasonZeroDisplayName { get; set; }
#nullable restore
#else
        public string SeasonZeroDisplayName { get; set; }
#endif
        /// <summary>The SkipSubtitlesIfAudioTrackMatches property</summary>
        public bool? SkipSubtitlesIfAudioTrackMatches { get; set; }
        /// <summary>The SkipSubtitlesIfEmbeddedSubtitlesPresent property</summary>
        public bool? SkipSubtitlesIfEmbeddedSubtitlesPresent { get; set; }
        /// <summary>The SubtitleDownloadLanguages property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SubtitleDownloadLanguages { get; set; }
#nullable restore
#else
        public List<string> SubtitleDownloadLanguages { get; set; }
#endif
        /// <summary>The SubtitleFetcherOrder property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SubtitleFetcherOrder { get; set; }
#nullable restore
#else
        public List<string> SubtitleFetcherOrder { get; set; }
#endif
        /// <summary>The TypeOptions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Client.Models.TypeOptions>? TypeOptions { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Client.Models.TypeOptions> TypeOptions { get; set; }
#endif
        /// <summary>The UseCustomTagDelimiters property</summary>
        public bool? UseCustomTagDelimiters { get; set; }
    }
}
#pragma warning restore CS0618
