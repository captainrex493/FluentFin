// <auto-generated/>
#pragma warning disable CS0618


using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MediaSourceInfo 
    #pragma warning restore CS1591
    {
        /// <summary>The AnalyzeDurationMs property</summary>
        public int? AnalyzeDurationMs { get; set; }
        /// <summary>The Bitrate property</summary>
        public int? Bitrate { get; set; }
        /// <summary>The BufferMs property</summary>
        public int? BufferMs { get; set; }
        /// <summary>The Container property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Container { get; set; }
#nullable restore
#else
        public string Container { get; set; }
#endif
        /// <summary>The DefaultAudioStreamIndex property</summary>
        public int? DefaultAudioStreamIndex { get; set; }
        /// <summary>The DefaultSubtitleStreamIndex property</summary>
        public int? DefaultSubtitleStreamIndex { get; set; }
        /// <summary>The EncoderPath property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EncoderPath { get; set; }
#nullable restore
#else
        public string EncoderPath { get; set; }
#endif
        /// <summary>The EncoderProtocol property</summary>
        public global::Jellyfin.Client.Models.MediaSourceInfo_EncoderProtocol? EncoderProtocol { get; set; }
        /// <summary>The ETag property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ETag { get; set; }
#nullable restore
#else
        public string ETag { get; set; }
#endif
        /// <summary>The FallbackMaxStreamingBitrate property</summary>
        public int? FallbackMaxStreamingBitrate { get; set; }
        /// <summary>The Formats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Formats { get; set; }
#nullable restore
#else
        public List<string> Formats { get; set; }
#endif
        /// <summary>The GenPtsInput property</summary>
        public bool? GenPtsInput { get; set; }
        /// <summary>The HasSegments property</summary>
        public bool? HasSegments { get; set; }
        /// <summary>The Id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The IgnoreDts property</summary>
        public bool? IgnoreDts { get; set; }
        /// <summary>The IgnoreIndex property</summary>
        public bool? IgnoreIndex { get; set; }
        /// <summary>The IsInfiniteStream property</summary>
        public bool? IsInfiniteStream { get; set; }
        /// <summary>The IsoType property</summary>
        public global::Jellyfin.Client.Models.MediaSourceInfo_IsoType? IsoType { get; set; }
        /// <summary>Gets or sets a value indicating whether the media is remote.Differentiate internet url vs local network.</summary>
        public bool? IsRemote { get; set; }
        /// <summary>The LiveStreamId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LiveStreamId { get; set; }
#nullable restore
#else
        public string LiveStreamId { get; set; }
#endif
        /// <summary>The MediaAttachments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Client.Models.MediaAttachment>? MediaAttachments { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Client.Models.MediaAttachment> MediaAttachments { get; set; }
#endif
        /// <summary>The MediaStreams property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Client.Models.MediaStream>? MediaStreams { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Client.Models.MediaStream> MediaStreams { get; set; }
#endif
        /// <summary>The Name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The OpenToken property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OpenToken { get; set; }
#nullable restore
#else
        public string OpenToken { get; set; }
#endif
        /// <summary>The Path property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Path { get; set; }
#nullable restore
#else
        public string Path { get; set; }
#endif
        /// <summary>The Protocol property</summary>
        public global::Jellyfin.Client.Models.MediaSourceInfo_Protocol? Protocol { get; set; }
        /// <summary>The ReadAtNativeFramerate property</summary>
        public bool? ReadAtNativeFramerate { get; set; }
        /// <summary>The RequiredHttpHeaders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Client.Models.MediaSourceInfo_RequiredHttpHeaders? RequiredHttpHeaders { get; set; }
#nullable restore
#else
        public global::Jellyfin.Client.Models.MediaSourceInfo_RequiredHttpHeaders RequiredHttpHeaders { get; set; }
#endif
        /// <summary>The RequiresClosing property</summary>
        public bool? RequiresClosing { get; set; }
        /// <summary>The RequiresLooping property</summary>
        public bool? RequiresLooping { get; set; }
        /// <summary>The RequiresOpening property</summary>
        public bool? RequiresOpening { get; set; }
        /// <summary>The RunTimeTicks property</summary>
        public long? RunTimeTicks { get; set; }
        /// <summary>The Size property</summary>
        public long? Size { get; set; }
        /// <summary>The SupportsDirectPlay property</summary>
        public bool? SupportsDirectPlay { get; set; }
        /// <summary>The SupportsDirectStream property</summary>
        public bool? SupportsDirectStream { get; set; }
        /// <summary>The SupportsProbing property</summary>
        public bool? SupportsProbing { get; set; }
        /// <summary>The SupportsTranscoding property</summary>
        public bool? SupportsTranscoding { get; set; }
        /// <summary>The Timestamp property</summary>
        public global::Jellyfin.Client.Models.MediaSourceInfo_Timestamp? Timestamp { get; set; }
        /// <summary>The TranscodingContainer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TranscodingContainer { get; set; }
#nullable restore
#else
        public string TranscodingContainer { get; set; }
#endif
        /// <summary>Media streaming protocol.Lowercase for backwards compatibility.</summary>
        public global::Jellyfin.Client.Models.MediaSourceInfo_TranscodingSubProtocol? TranscodingSubProtocol { get; set; }
        /// <summary>The TranscodingUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TranscodingUrl { get; set; }
#nullable restore
#else
        public string TranscodingUrl { get; set; }
#endif
        /// <summary>The Type property</summary>
        public global::Jellyfin.Client.Models.MediaSourceInfo_Type? Type { get; set; }
        /// <summary>The UseMostCompatibleTranscodingProfile property</summary>
        public bool? UseMostCompatibleTranscodingProfile { get; set; }
        /// <summary>The Video3DFormat property</summary>
        public global::Jellyfin.Client.Models.MediaSourceInfo_Video3DFormat? Video3DFormat { get; set; }
        /// <summary>The VideoType property</summary>
        public global::Jellyfin.Client.Models.MediaSourceInfo_VideoType? VideoType { get; set; }
    }
}
#pragma warning restore CS0618
