// <auto-generated/>
#pragma warning disable CS0618


using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Client.Models
{
    /// <summary>
    /// A class for transcoding profile information.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TranscodingProfile 
    {
        /// <summary>Gets or sets the audio codec.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AudioCodec { get; set; }
#nullable restore
#else
        public string AudioCodec { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether breaking the video stream on non-keyframes is supported.</summary>
        public bool? BreakOnNonKeyFrames { get; set; }
        /// <summary>Gets or sets the profile conditions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Client.Models.ProfileCondition>? Conditions { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Client.Models.ProfileCondition> Conditions { get; set; }
#endif
        /// <summary>Gets or sets the container.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Container { get; set; }
#nullable restore
#else
        public string Container { get; set; }
#endif
        /// <summary>Gets or sets the encoding context.</summary>
        public global::Jellyfin.Client.Models.TranscodingProfile_Context? Context { get; set; }
        /// <summary>Gets or sets a value indicating whether timestamps should be copied.</summary>
        public bool? CopyTimestamps { get; set; }
        /// <summary>Gets or sets a value indicating whether variable bitrate encoding is supported.</summary>
        public bool? EnableAudioVbrEncoding { get; set; }
        /// <summary>Gets or sets a value indicating whether M2TS mode is enabled.</summary>
        public bool? EnableMpegtsM2TsMode { get; set; }
        /// <summary>Gets or sets a value indicating whether subtitles are allowed in the manifest.</summary>
        public bool? EnableSubtitlesInManifest { get; set; }
        /// <summary>Gets or sets a value indicating whether the content length should be estimated.</summary>
        public bool? EstimateContentLength { get; set; }
        /// <summary>Gets or sets the maximum audio channels.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MaxAudioChannels { get; set; }
#nullable restore
#else
        public string MaxAudioChannels { get; set; }
#endif
        /// <summary>Gets or sets the minimum amount of segments.</summary>
        public int? MinSegments { get; set; }
        /// <summary>Media streaming protocol.Lowercase for backwards compatibility.</summary>
        public global::Jellyfin.Client.Models.TranscodingProfile_Protocol? Protocol { get; set; }
        /// <summary>Gets or sets the segment length.</summary>
        public int? SegmentLength { get; set; }
        /// <summary>Gets or sets the transcoding seek info mode.</summary>
        public global::Jellyfin.Client.Models.TranscodingProfile_TranscodeSeekInfo? TranscodeSeekInfo { get; set; }
        /// <summary>Gets or sets the DLNA profile type.</summary>
        public global::Jellyfin.Client.Models.TranscodingProfile_Type? Type { get; set; }
        /// <summary>Gets or sets the video codec.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VideoCodec { get; set; }
#nullable restore
#else
        public string VideoCodec { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Jellyfin.Client.Models.TranscodingProfile"/> and sets the default values.
        /// </summary>
        public TranscodingProfile()
        {
            Context = global::Jellyfin.Client.Models.TranscodingProfile_Context.Streaming;
            TranscodeSeekInfo = global::Jellyfin.Client.Models.TranscodingProfile_TranscodeSeekInfo.Auto;
        }
    }
}
#pragma warning restore CS0618
