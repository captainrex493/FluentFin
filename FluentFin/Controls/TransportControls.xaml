<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="FluentFin.Controls.TransportControls"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:b="using:FluentFin.Behaviors"
    xmlns:c="using:FluentFin.Converters"
    xmlns:cc="using:CommunityToolkit.WinUI.Converters"
    xmlns:ctk="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fmp="using:FlyleafLib.MediaPlayer"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:FluentFin.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    mc:Ignorable="d">

    <UserControl.Resources>
        <cc:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <cc:StringVisibilityConverter x:Key="StringVisibilityConveter" />
        <cc:SwitchConverter x:Name="PlayPauseIconConveter" TargetType="fmp:Status">
            <ctk:Case Value="Playing">
                <SymbolIcon Symbol="Pause" />
            </ctk:Case>
            <ctk:Case IsDefault="True" Value="Paused">
                <SymbolIcon Symbol="Play" />
            </ctk:Case>
        </cc:SwitchConverter>
        <cc:SwitchConverter x:Name="FullScreenRestoreIconConverter" />
        <cc:EmptyObjectToObjectConverter
            x:Key="ObjectToVisibilityConverter"
            EmptyValue="Collapsed"
            NotEmptyValue="Visible" />
        <cc:CollectionVisibilityConverter x:Key="EmptyCollectionVisibilityConverter" />
        <LinearGradientBrush x:Name="TransportControlBackground" MappingMode="RelativeToBoundingBox" Opacity="0.2" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="1" Color="Black" />
        </LinearGradientBrush>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid>
            <Button
                x:Name="DynamicSkipIntroButton"
                Width="150"
                Height="50"
                Margin="10,30"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                VerticalContentAlignment="Center"
                Content="Skip"
                FontSize="20"
                FontWeight="Bold"
                Foreground="White"
                Visibility="{x:Bind IsSkipButtonVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.Background>
                    <SolidColorBrush Opacity="0.5" Color="Black" />
                </Button.Background>
            </Button>
            <Grid>
                <Border x:Name="ShadowTarget" />
                <TextBlock
                    Margin="0,0,0,50"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    FontSize="50"
                    FontWeight="SemiBold"
                    Foreground="White"
                    Text="{x:Bind Player.Subtitles.SubsText, Mode=OneWay}"
                    TextAlignment="Center"
                    TextWrapping="Wrap"
                    Visibility="{x:Bind Player.Subtitles.SubsText, Mode=OneWay, Converter={StaticResource StringVisibilityConveter}}">
                    <ui:Effects.Shadow>
                        <ui:AttachedDropShadow
                            BlurRadius="10"
                            CastTo="{x:Bind ShadowTarget}"
                            CornerRadius="0"
                            Offset="0" />
                    </ui:Effects.Shadow>
                </TextBlock>
            </Grid>

        </Grid>

        <Grid
            x:Name="Bar"
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            x:FieldModifier="public"
            Background="{StaticResource TransportControlBackground}"
            Visibility="Visible">
            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation
                    From="0"
                    To="1.0"
                    Duration="0:0:1" />
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:OpacityAnimation To="0" Duration="0:0:1" />
            </animations:Implicit.HideAnimations>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="8,0,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <!--  Current Time | Slider | Remaining Time  -->
                <TextBlock
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="{x:Bind c:Converters.TicksToTime(Player.CurTime), Mode=OneWay}" />

                <ctk:SwitchPresenter
                    Grid.Column="1"
                    TargetType="x:Boolean"
                    Value="False">
                    <ctk:Case Value="True">
                        <ProgressBar
                            Margin="10,0,10,0"
                            VerticalAlignment="Center"
                            IsIndeterminate="True" />
                    </ctk:Case>
                    <ctk:Case Value="False">
                        <Slider
                            x:Name="TimeSlider"
                            Grid.Column="1"
                            Margin="10,0,10,0"
                            VerticalAlignment="Center"
                            IsTabStop="False"
                            Maximum="{x:Bind c:Converters.TiksToSeconds(Player.Duration), Mode=OneWay}"
                            Value="{x:Bind c:Converters.TiksToSeconds(Player.CurTime), Mode=OneWay}" />
                    </ctk:Case>
                </ctk:SwitchPresenter>

                <TextBlock
                    Grid.Column="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{x:Bind TimeRemaining(Player.CurTime, Player.Duration), Mode=OneWay}" />
            </Grid>

            <Grid Grid.Row="1" Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <CommandBar
                    DefaultLabelPosition="Collapsed"
                    FlowDirection="RightToLeft"
                    IsDynamicOverflowEnabled="False"
                    OverflowButtonVisibility="Collapsed">

                    <AppBarButton
                        x:Name="SkipForwardButton"
                        Click="SkipForwardButton_Click"
                        Icon="{ui:FontIcon Glyph=&#xED3D;}"
                        IsTapEnabled="False"
                        Label="Seek forward">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Right" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="NextTrackButton"
                        Command="{x:Bind Playlist.SelectNextCommand, Mode=OneWay}"
                        Icon="Next"
                        IsTabStop="False"
                        Label="Next Episode">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Right" Modifiers="Control" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="PlayPauseButton"
                        Command="{x:Bind Player.Commands.TogglePlayPause, Mode=OneWay}"
                        Icon="{x:Bind Player.Status, Converter={StaticResource PlayPauseIconConveter}, Mode=OneWay}"
                        IsEnabled="{x:Bind Player.CanPlay, Mode=OneWay}"
                        IsTabStop="False"
                        Label="Play/Pause">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Space" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="PreviousTrackButton"
                        Command="{x:Bind Playlist.SelectPrevCommand, Mode=OneWay}"
                        Icon="Previous"
                        IsTabStop="False"
                        Label="Previous Episode">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Left" Modifiers="Control" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton
                        x:Name="SkipBackwardButton"
                        Click="SkipBackwardButton_Click"
                        Icon="{ui:FontIcon Glyph=&#xED3C;}"
                        IsTapEnabled="False"
                        Label="Seek backward">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Left" />
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>

                </CommandBar>

                <CommandBar
                    Grid.Column="1"
                    DefaultLabelPosition="Collapsed"
                    IsDynamicOverflowEnabled="True"
                    OverflowButtonVisibility="Auto">

                    <AppBarSeparator />

                    <AppBarButton
                        x:Name="FullWindowButton"
                        Command="{x:Bind Player.Commands.ToggleFullScreen, Mode=OneWay}"
                        IsTabStop="False"
                        Label="Toggle Fullscreen">
                        <AppBarButton.Icon>
                            <SymbolIcon
                                x:Name="FullWindowSymbol"
                                x:FieldModifier="Public"
                                Symbol="FullScreen" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                    <AppBarSeparator />

                    <AppBarButton Icon="Volume" Label="Volume">
                        <AppBarButton.Flyout>
                            <Flyout>
                                <Slider
                                    Width="100"
                                    IsTabStop="False"
                                    Maximum="{x:Bind Player.Config.Player.VolumeMax, Mode=OneWay}"
                                    Value="{x:Bind Player.Audio.Volume, Mode=TwoWay}" />
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>

                    <AppBarSeparator />

                    <AppBarButton
                        x:Name="CCSelectionButton"
                        Icon="{ui:FontIcon Glyph=&#xED1E;}"
                        IsTabStop="False"
                        Label="Subtitles">
                        <i:Interaction.Behaviors>
                            <b:SubtitlesButtonBehavior MediaPlayer="{x:Bind Player, Mode=OneWay}" />
                        </i:Interaction.Behaviors>
                    </AppBarButton>

                    <AppBarButton
                        x:Name="AudioSelectionButton"
                        Icon="{ui:FontIcon Glyph=&#xED1F;}"
                        IsTabStop="False"
                        Label="Audio">
                        <i:Interaction.Behaviors>
                            <b:AudioButtonBehavior MediaPlayer="{x:Bind Player, Mode=OneWay}" />
                        </i:Interaction.Behaviors>
                    </AppBarButton>


                </CommandBar>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
